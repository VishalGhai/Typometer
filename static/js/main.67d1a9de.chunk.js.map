{"version":3,"sources":["FinishScreen.js","Timer.js","App.js","index.js"],"names":["mainContainer","display","justifyContent","alignItems","height","FinishScreen","tempString","incorrectAttempt","input","style","flexDirection","color","length","toFixed","split","padding","border","outline","backgroundColor","fontSize","borderRadius","fontFamily","marginTop","onClick","window","location","reload","Timer","timer","position","bottom","randomWords","require","inputContainer","overflow","textAlign","zIndex","width","fontWeight","App","useState","setInput","setTempString","tempStringArray","setTempStringArray","inputarray","setInputArray","onProcess","setOnProcess","setTimer","setIncorrectAttempt","timerinterval","useEffect","a","exactly","join","setInterval","clearInterval","finish","value","left","top","autoFocus","onChange","e","target","type","marginInline","map","index","render","document","getElementById"],"mappings":"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","file":"static/js/main.67d1a9de.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FinishScreen = ({tempString,incorrectAttempt,input}) => {\r\n    return (\r\n        <div style={{ ...mainContainer, flexDirection: 'column' }}>\r\n            <h1 style={{ color: 'white' }}>Well done!!</h1>\r\n            <h1 style={{ color: 'white' }}>Accuracy : {((tempString.length - incorrectAttempt) / tempString.length * 100).toFixed(2)}</h1>\r\n            <h1 style={{ color: 'white' }}>WPM : {input.split(' ').length*2}</h1>\r\n            <button style={{ padding: '10px', border: 'none', outline: 'none', backgroundColor: 'white', fontSize: '25px', borderRadius: '10px', fontFamily: \"'Quicksand',sans-serif\",marginTop: '10px'}} onClick={() => { window.location.reload() }}>TRY AGAIN</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mainContainer = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n}\r\n\r\nexport default FinishScreen\r\n","import React from 'react'\r\n\r\nconst Timer = ({timer}) => {\r\n    return (\r\n        <h1 style={{ color: 'white', position: 'absolute', bottom: '200px' }}>YOU HAVE : {timer} SECONDS</h1>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport FinishScreen from './FinishScreen'\r\nimport Timer from './Timer'\r\nconst randomWords = require(\"random-words\")\r\nconst App = () => {\r\n    const [input, setInput] = useState('')\r\n    const [tempString, setTempString] = useState('')\r\n    const [tempStringArray, setTempStringArray] = useState([])\r\n    const [inputarray, setInputArray] = useState([])\r\n    const [onProcess, setOnProcess] = useState(false)\r\n    const [timer, setTimer] = useState(30)\r\n    const [incorrectAttempt, setIncorrectAttempt] = useState(0)\r\n    let timerinterval = ''\r\n    const startTimer = () => {\r\n        timerinterval = setInterval(() => {\r\n            setTimer(timer => timer - 1)\r\n        }, 1000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (timer < 0) setOnProcess(true)\r\n    }, [timer])\r\n\r\n    useEffect(async () => {\r\n        setTempString(randomWords({ exactly: 50, join: ' ' })) // generates one sentence\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setTempStringArray(tempString.split(''))\r\n    }, [tempString])\r\n\r\n    useEffect(() => {\r\n        setInputArray(input.split(''))\r\n        if (input.length === 1) {\r\n            if (timerinterval === '')\r\n                startTimer()\r\n            else clearInterval(timerinterval)\r\n        }\r\n        if ((input === tempStringArray.length - 1)) finish(!onProcess)\r\n        if(inputarray[inputarray.length-1]!==tempStringArray[inputarray.length-1]) setIncorrectAttempt(incorrectAttempt=>incorrectAttempt+1)\r\n    }, [input])\r\n\r\n\r\n    const finish = (value) => {\r\n        setOnProcess(value)\r\n    }\r\n\r\n    const wrongAttempt = (value) => {\r\n        setIncorrectAttempt(value)\r\n    }\r\n\r\n    return (\r\n        !onProcess ? <div style={mainContainer}>\r\n            <h1 style={{ color: 'white', position: 'absolute', left: '30px', top: '0', fontWeight: 900 }}>Typometer</h1>\r\n            <Timer timer={timer} />\r\n            <textarea value={input} autoFocus={true} onChange={e => { setInput(e.target.value); }} type=\"hidden\" style={inputContainer} />\r\n            <h1 style={{ marginTop: '-200px', width: 'fit-content' , marginInline:'100px', height: '20%', color: 'grey', position: 'absolute' }}>{tempString}</h1>\r\n            <h1 style={{ marginTop: '-200px', width:'100%' , marginInline:'100px', zIndex: 2, height: '20%' }}>\r\n                {\r\n                    inputarray.map((value, index) => {\r\n                        if (value === tempStringArray[index])\r\n                            return <span style={{ color: 'white' }}>{value}</span>\r\n                        else {\r\n                            // wrongAttempt(incorrectAttempt + 1)\r\n                            return <span style={{ color: 'red' }}>{value}</span>\r\n                        }\r\n                    })\r\n                }\r\n            </h1>\r\n        </div> :\r\n            <FinishScreen input={input} tempString={tempString} incorrectAttempt={incorrectAttempt} />\r\n    )\r\n}\r\nconst inputContainer = {\r\n    overflow: 'hidden',\r\n    border: 'none',\r\n    textAlign: 'center',\r\n    outline: 'none',\r\n    fontFamily: \"'Quicksand', sans-serif\",\r\n    position: 'absolute',\r\n    marginTop: '-226px',\r\n    zIndex: 3,\r\n    width: 'fit-content',\r\n    height: '19.7%',\r\n    backgroundColor: 'rgba(255,255,255,0)',\r\n    color: 'rgba(255,255,255,0)',\r\n    fontSize: '36px',\r\n    padding: 0,\r\n    fontWeight: 'bold'\r\n}\r\n\r\nconst mainContainer = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport './style.css'\r\n\r\nrender(<App />,document.getElementById(\"root\"))"],"sourceRoot":""}